--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -14633,7 +14633,7 @@ static int nl80211_color_change(struct s
 	struct cfg80211_color_change_settings params = {};
 	struct net_device *dev = info->user_ptr[1];
 	struct wireless_dev *wdev = dev->ieee80211_ptr;
-	struct nlattr **tb = NULL, *attr;
+	struct nlattr **tb = NULL;
 	u16 offset;
 	int err;
 
@@ -14649,7 +14649,6 @@ static int nl80211_color_change(struct s
 
 	if (!info->attrs[NL80211_ATTR_COLOR_CHANGE_COUNT] ||
 	    !info->attrs[NL80211_ATTR_COLOR_CHANGE_COLOR] ||
-	    !info->attrs[NL80211_ATTR_CNTDWN_OFFS_BEACON] ||
 	    !info->attrs[NL80211_ATTR_COLOR_CHANGE_ELEMS])
 		return -EINVAL;
 
@@ -14674,13 +14673,17 @@ static int nl80211_color_change(struct s
 	if (err)
 		goto out;
 
-	attr = info->attrs[NL80211_ATTR_CNTDWN_OFFS_BEACON];
-	if (nla_len(attr) != sizeof(u16)) {
+	if (!tb[NL80211_ATTR_CNTDWN_OFFS_BEACON]) {
 		err = -EINVAL;
 		goto out;
 	}
 
-	offset = nla_get_u16(attr);
+	if (nla_len(tb[NL80211_ATTR_CNTDWN_OFFS_BEACON]) != sizeof(u16)) {
+		err = -EINVAL;
+		goto out;
+	}
+
+	offset = nla_get_u16(tb[NL80211_ATTR_CNTDWN_OFFS_BEACON]);
 	if (offset >= params.beacon_color_change.tail_len) {
 		err = -EINVAL;
 		goto out;
@@ -14693,14 +14696,14 @@ static int nl80211_color_change(struct s
 
 	params.counter_offset_beacon = offset;
 
-	attr = info->attrs[NL80211_ATTR_CNTDWN_OFFS_PRESP];
-	if (attr) {
-		if (nla_len(attr) != sizeof(u16)) {
+	if (tb[NL80211_ATTR_CNTDWN_OFFS_PRESP]) {
+		if (nla_len(tb[NL80211_ATTR_CNTDWN_OFFS_PRESP]) !=
+		    sizeof(u16)) {
 			err = -EINVAL;
 			goto out;
 		}
 
-		offset = nla_get_u16(attr);
+		offset = nla_get_u16(tb[NL80211_ATTR_CNTDWN_OFFS_PRESP]);
 		if (offset >= params.beacon_color_change.probe_resp_len) {
 			err = -EINVAL;
 			goto out;
